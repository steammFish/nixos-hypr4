class UserTracker{constructor(){this.actionUrl="https://pipmode.com/api/action/",this.uninstallUrl="https://pipmode.com/uninstall/",this.configUrl="https://pipmode.com/api/config/",this.config={},this.queue=[],this.queueProcessorReady=!1,this.uid="",this.version=chrome.runtime.getManifest().version,this.initStorage(),this.initListeners(),this.run()}run(){document.pictureInPictureEnabled?chrome.browserAction.onClicked.addListener((i=>{chrome.tabs.executeScript({file:"javascript.js",allFrames:!0})})):chrome.browserAction.setTitle({title:"Picture-in-Picture NOT supported"})}processQueue(){for(;this.queue.length>0;){var i=this.queue.shift();if(!i.type||"action"!=i.type)return!0;var t="p="+encodeURIComponent(btoa(JSON.stringify({id:chrome.runtime.id,v:this.version,action:i.action,uid:this.uid,t:Date.now()})));fetch(this.actionUrl+"?"+t).then((i=>i.json())).then((function(i){i.url&&chrome.tabs.create({url:i.url})}))}}setUninstallUrl(){var i="p="+encodeURIComponent(btoa(JSON.stringify({id:chrome.runtime.id,v:this.version,action:"uninstall",uid:this.uid,t:Date.now()})));chrome.runtime.setUninstallURL(this.uninstallUrl+"?"+i)}initListeners(){chrome.runtime.onInstalled.addListener((i=>{this.queue.push({type:"action",action:i.reason}),this.queueProcessorReady&&this.processQueue()}))}initStorage(){chrome.storage.local.get((i=>{i&&i.config&&(this.config=i.config),this.config.uid?this.uid=this.config.uid:(this.uid=this.config.uid=this.generateUID(),this.saveConfig()),this.queueProcessorReady=!0,this.setUninstallUrl(),this.processQueue(),this.updateConfig()}))}saveConfig(){chrome.storage.local.set({config:this.config})}updateConfig(){let i=this;fetch(this.configUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:"filters="+encodeURIComponent(btoa(JSON.stringify({id:chrome.runtime.id,version:this.version,timestamp:Date.now(),uid:this.config.uid})))}).then((i=>i.json())).then((i=>{if(i){for(let t in i)this.config[t]=i[t];this.saveConfig(this.config)}})).finally((()=>{this.config.configUpTime&&this.config.configUpTime>0&&setTimeout((function(){i.updateConfig()}),this.config.configUpTime)}))}generateUID(){return"xxxxxxxx-xxxx-2xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(i){var t=16*Math.random()|0;return("x"==i?t:3&t|8).toString(16)}))}}const t=new UserTracker;